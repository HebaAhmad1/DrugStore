#pragma checksum "C:\Users\البدر\Desktop\Gaza_Central_Drug_Store\DrugStore\Views\DisplayOrders\AdminArchivedOrders.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "0e0ef5328324706e1128c7d2dcc383e4447f9fe6"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_DisplayOrders_AdminArchivedOrders), @"mvc.1.0.view", @"/Views/DisplayOrders/AdminArchivedOrders.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\البدر\Desktop\Gaza_Central_Drug_Store\DrugStore\Views\_ViewImports.cshtml"
using DrugStore;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\البدر\Desktop\Gaza_Central_Drug_Store\DrugStore\Views\_ViewImports.cshtml"
using DrugStore.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\البدر\Desktop\Gaza_Central_Drug_Store\DrugStore\Views\_ViewImports.cshtml"
using DrugStoreData.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\البدر\Desktop\Gaza_Central_Drug_Store\DrugStore\Views\_ViewImports.cshtml"
using Microsoft.AspNetCore.Builder;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\البدر\Desktop\Gaza_Central_Drug_Store\DrugStore\Views\_ViewImports.cshtml"
using Microsoft.AspNetCore.Localization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\البدر\Desktop\Gaza_Central_Drug_Store\DrugStore\Views\_ViewImports.cshtml"
using Microsoft.AspNetCore.Http.Features;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\البدر\Desktop\Gaza_Central_Drug_Store\DrugStore\Views\_ViewImports.cshtml"
using Microsoft.AspNetCore.Mvc.Localization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\البدر\Desktop\Gaza_Central_Drug_Store\DrugStore\Views\_ViewImports.cshtml"
using Microsoft.Extensions.Options;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\البدر\Desktop\Gaza_Central_Drug_Store\DrugStore\Views\_ViewImports.cshtml"
using System.Globalization;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0e0ef5328324706e1128c7d2dcc383e4447f9fe6", @"/Views/DisplayOrders/AdminArchivedOrders.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d8b022ccf6f86ceadb146c1719fe6cd72c235145", @"/Views/_ViewImports.cshtml")]
    public class Views_DisplayOrders_AdminArchivedOrders : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/icons/phamacy-icon2.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("height", new global::Microsoft.AspNetCore.Html.HtmlString("20"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            DefineSection("Styles", async() => {
                WriteLiteral("\r\n\r\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.datatables.net/1.11.4/css/jquery.dataTables.min.css\" />\r\n    <link href=\"https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css\" rel=\"stylesheet\" />\r\n\r\n\r\n\r\n");
                WriteLiteral(@"
    <style>
        tr.group,
        tr.group:hover {
            background-color: #ddd !important;
        }

        .select2-selection.select2-selection--single {
            background-color: #E3E3E3;
        }

        .filter {
            position: relative;
        }

            .filter i {
                position: absolute;
                left: 20px;
                top: calc(50% - 7px);
                color: #999
            }

            .filter img {
                position: absolute;
                left: 20px;
                top: calc(50% - 10px);
            }
    </style>
");
            }
            );
            WriteLiteral("\r\n\r\n<div class=\"d-flex justify-content-between pb-2 arabic-Div row\" style=\"border-bottom: 3px solid\">\r\n    <div class=\"font-weight-bolder text-nowrap  col-lg-2 col-sm-12\" style=\"line-height: 40px;\">\r\n        ");
#nullable restore
#line 43 "C:\Users\البدر\Desktop\Gaza_Central_Drug_Store\DrugStore\Views\DisplayOrders\AdminArchivedOrders.cshtml"
   Write(localizer["Archived Orders"]);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
    </div>
    <div class=""col-md-7 col-lg-7 col-sm-12"">
        <div class=""align-items-center"">
            <div class=""d-flex row"">

                <div class=""col-md-6 col-lg-3  col-sm-12 px-1 filter"">
                    <div class=""input-group"" id=""defaultrange"">
                        <button class=""btn btn-light btn-out  w-100 font-weight-bold"" style=""background-color:#E3E3E3;border: 1px solid #aaa;color:#999"" name=""daterange"">
                            <i class=""fa fa-calendar"" aria-hidden=""true""></i>
                            ");
#nullable restore
#line 53 "C:\Users\البدر\Desktop\Gaza_Central_Drug_Store\DrugStore\Views\DisplayOrders\AdminArchivedOrders.cshtml"
                       Write(localizer["Date"]);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
                        </button>
                    </div>
                </div>
                <div class=""col-md-6 col-lg-3 col-sm-12 px-1 filter"">

                    <select type=""text"" class=""form-control"" id=""drug-name"">
                    </select>
                    <i class=""fas fa-box"" aria-hidden=""true""></i>
                </div>

                <div class="" col-md-6 col-lg-3 col-sm-12 px-1 filter"">
                    <button type=""button"" class=""btn p-2  w-100 font-weight-bold"" style=""background:#E3E3E3;border: 1px solid #aaa;color:#999"" data-toggle=""modal"" data-target=""#price-range-modal"">
                        <i class=""fa fa-shekel-sign"" aria-hidden=""true""></i>
                        ");
#nullable restore
#line 67 "C:\Users\البدر\Desktop\Gaza_Central_Drug_Store\DrugStore\Views\DisplayOrders\AdminArchivedOrders.cshtml"
                   Write(localizer["Price Range"]);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
                    </button>
                    <!-- Modal -->
                    <div class=""modal fade"" id=""price-range-modal"" tabindex=""-1"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true"">
                        <div class=""modal-dialog"">
                            <div class=""modal-content"">
                                <div class=""modal-header"">
                                    <h5 class=""modal-title"" id=""exampleModalLabel"">");
#nullable restore
#line 74 "C:\Users\البدر\Desktop\Gaza_Central_Drug_Store\DrugStore\Views\DisplayOrders\AdminArchivedOrders.cshtml"
                                                                              Write(localizer["Price Range"]);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</h5>
                                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                                        <span aria-hidden=""true"">&times;</span>
                                    </button>
                                </div>
                                <div class=""modal-body"">
                                    <input type=""number"" class=""form-control"" name=""price_range_start""");
            BeginWriteAttribute("value", " value=\"", 3547, "\"", 3555, 0);
            EndWriteAttribute();
            BeginWriteAttribute("placeholder", " placeholder=\"", 3556, "\"", 3588, 1);
#nullable restore
#line 80 "C:\Users\البدر\Desktop\Gaza_Central_Drug_Store\DrugStore\Views\DisplayOrders\AdminArchivedOrders.cshtml"
WriteAttributeValue("", 3570, localizer["from"], 3570, 18, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" />\r\n                                    <br />\r\n                                    <input type=\"number\" class=\"form-control\" name=\"price_range_end\"");
            BeginWriteAttribute("value", " value=\"", 3738, "\"", 3746, 0);
            EndWriteAttribute();
            BeginWriteAttribute("placeholder", " placeholder=\"", 3747, "\"", 3777, 1);
#nullable restore
#line 82 "C:\Users\البدر\Desktop\Gaza_Central_Drug_Store\DrugStore\Views\DisplayOrders\AdminArchivedOrders.cshtml"
WriteAttributeValue("", 3761, localizer["to"], 3761, 16, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" />\r\n\r\n                                </div>\r\n                                <div class=\"modal-footer\">\r\n                                    <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">");
#nullable restore
#line 86 "C:\Users\البدر\Desktop\Gaza_Central_Drug_Store\DrugStore\Views\DisplayOrders\AdminArchivedOrders.cshtml"
                                                                                                    Write(localizer["Close"]);

#line default
#line hidden
#nullable disable
            WriteLiteral("</button>\r\n                                    <button type=\"button\" class=\"btn btn-primary\" id=\"price-range\">");
#nullable restore
#line 87 "C:\Users\البدر\Desktop\Gaza_Central_Drug_Store\DrugStore\Views\DisplayOrders\AdminArchivedOrders.cshtml"
                                                                                              Write(localizer["Save changes"]);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- end of modal-->
                </div>

                <div class=""col-md-6 col-lg-3 col-sm-12 px-1 filter"">

                    <select type=""text"" class=""form-control"" id=""Pharmacy-name"">
                    </select>
                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "0e0ef5328324706e1128c7d2dcc383e4447f9fe612662", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n    <div class=\"col-lg-2 mt-2 mt-md-2 col-sm-12\">\r\n        <button class=\"btn btn-primary\" id=\"export\"><i class=\"fa fa-print\"></i> ");
#nullable restore
#line 106 "C:\Users\البدر\Desktop\Gaza_Central_Drug_Store\DrugStore\Views\DisplayOrders\AdminArchivedOrders.cshtml"
                                                                           Write(localizer["Export & Print"]);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</button>
    </div>
</div>

<div class=""card-body"">


    <br />
    <table id=""example"" class=""table table-responsive-lg table-responsive-xl row-border hover table-checkable"" style=""width:100%;margin-top: 13px !important"">
        <thead>
            <tr>
                <th>pharmacyName</th>
                <th>createdAt</th>
                <th>drugId</th>
                <th>drugName</th>
                <th>quantity</th>
                <th>pricePerUnit(NIS)</th>
                <th>totalPrice(NIS)</th>
                <th>Status</th>
            </tr>
        </thead>
    </table>
</div>



<!-- Edit Order Modal -->
<div class=""modal fade"" id=""edit-order-modal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""exampleModalCenterTitle"" aria-hidden=""true"">
    <div class=""modal-dialog modal-xl modal-dialog-centered"" role=""document"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h5 class=""modal-title"" id=""exampleModalLongTitle"">Edit O");
            WriteLiteral(@"rder</h5>
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                    <span aria-hidden=""true"">&times;</span>
                </button>
            </div>
            <div class=""modal-body"">
                <div class=""table-responsive"">
                    <table class=""table table-striped"">
                        <thead>
                            <tr>
                                <th scope=""col"">Drug Id</th>
                                <th scope=""col"">Drug Name</th>
                                <th scope=""col"">Quantity</th>
                                <th scope=""col"">Price Per Unit</th>
                                <th scope=""col"">Total Price</th>
                            </tr>
                        </thead>
                        <tbody>
");
            WriteLiteral(@"                        </tbody>
                    </table>
                </div>
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">Close</button>
                <button type=""button"" class=""btn btn-primary"" id=""submit-modal"">Save changes</button>
            </div>
        </div>
    </div>
</div>

<!-- The Modal To Show Loader -->
<div class=""modal"" id=""LoaderModal"">
    <div class=""modal-dialog"">
        <div");
            BeginWriteAttribute("class", " class=\"", 7574, "\"", 7582, 0);
            EndWriteAttribute();
            WriteLiteral(@">
            <div class=""loader""></div>
            <button class=""d-none"" type=""button"" id=""closeLaoder"" data-dismiss=""modal""></button>
        </div>
    </div>
</div>

<button type=""button"" class=""d-none"" id=""showLaoder"" data-toggle=""modal"" data-target=""#LoaderModal"">
</button>



<!-- End Edit Order Modal -->
");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"

    <script type=""text/javascript"" src=""https://cdn.datatables.net/1.11.4/js/jquery.dataTables.min.js""></script>

    <script src=""https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js""></script>

    <script>

        let search_obj = {
            ""DrugId"": 0,
            ""PharmacyId"": null,
            ""MinTotalPrice"": 0,
            ""MaxTotalPrice"": 0,
            ""From"": null,
            ""To"": null,
            ""MonthName"": null,
            ""PeriodOfTime"": null,
            ""Status"": 0,
        };

        $(document).ready(function () {

            // drug name select2
           $('#drug-name').select2({
            placeholder: """);
#nullable restore
#line 214 "C:\Users\البدر\Desktop\Gaza_Central_Drug_Store\DrugStore\Views\DisplayOrders\AdminArchivedOrders.cshtml"
                     Write(localizer["Drug"]);

#line default
#line hidden
#nullable disable
                WriteLiteral(@""",
            allowClear:true,
            ajax: {
                url: ""/drug/AllDrugs"",
                dataType: ""json"",
                type: ""GET"",
                data: function (params) {
                    return {
                        search: params.term,
                        page: params.page
                    }

                }
            },
             templateResult: function(data) {

                    if (!data.id) {
                      return data.text;
                    }

                    var $res = $('<div class=""font-weight-light"" style=""font-size:15px;""></div>');

                    $res.text(data.text);
                    //$res.addClass('wrap');

                    return $res;
                  }, //end of templateResult
            processResults: function (data, params) {

                return {
                    results: data

                };
            }, //end of processResults
            cache: true
        });");
                WriteLiteral("\n\r\n\r\n\r\n\r\n\r\n\r\n            // $(\'#drug-name\').val(null).trigger(\'change\');\r\n\r\n\r\n            //pharmachy name select2\r\n\r\n             $(\'#Pharmacy-name\').select2({\r\n            placeholder: \"");
#nullable restore
#line 262 "C:\Users\البدر\Desktop\Gaza_Central_Drug_Store\DrugStore\Views\DisplayOrders\AdminArchivedOrders.cshtml"
                     Write(localizer["Pharmacy"]);

#line default
#line hidden
#nullable disable
                WriteLiteral(@""",
            allowClear:true,
            ajax: {
                url: ""/DisplayOrders/GetAllPharmacy"",
                dataType: ""json"",
                type: ""GET"",
                data: function (params) {
                    return {
                        search: params.term,
                        page: params.page
                    }

                }
            },
             templateResult: function(data) {

                    if (!data.id) {
                      return data.text;
                    }

                    var $res = $('<div class=""font-weight-light"" style=""font-size:15px;""></div>');

                    $res.text(data.text);
                    //$res.addClass('wrap');

                    return $res;
                  }, //end of templateResult
            processResults: function (data, params) {

                return {
                    results: data

                };
            }, //end of processResults
            cache: tru");
                WriteLiteral(@"e
        });




        });


        var KTDatatablesDataSourceAjaxServer = function () {

            $.fn.dataTable.Api.register('column().title()', function () {
                return $(this.header()).text().trim();
            });

            var initTable1 = function () {
                //var table = $('#example');

                // begin first table
                var table = $('#example').DataTable({
                    drawCallback: function (settings) {
                        var api = this.api();
                        var rows = api.rows({ page: 'current' }).nodes();
                        var last = null;
                        var columns = [0, 1];

                        for (let c = 0; c < columns.length; c++) {
                            var colNo = columns[c];
                            if (colNo == 0) {
                                api.column(colNo, { page: 'current' }).data().each(function (group, i) {
                                    if (");
                WriteLiteral(@"last !== group) {

                                        $(rows).eq(i).before(
                                            '<tr class=""group""><td colspan=""8"">' + group + '</td></tr>'
                                        );

                                        last = group;
                                    }
                                });
                            } else {
                                api.column(colNo, { page: 'current' }).data().each(function (group, i) {
                                    if (last !== group) {

                                        $(rows).eq(i).before(

                                            `<tr class=""group"" style=""background-color:#D4EDF9 !important;"">
                                                             <td colspan=""8"">
                                                          <span class= ""order-datetime"">${group}</span>

                                                              <span class=""float-right"">Tota");
                WriteLiteral(@"l Price: ${api.row(i).data().archivedTotalPricePharmacyOrders} NIS </span>
                                                             </td>
                                                         </tr>`
                                        );


                                        last = group;
                                    }
                                });
                            }
                        }

                    },
                    responsive: true,
                    searchDelay: 500,
                    processing: true,
                    serverSide: true,
                    dom: '<""row""lr><""row""<""col-xs-12 col-lg-12""t>><""row""<""col-sm-6""i><""col-sm-6""p>>',
                    language: {
                    ""infoFiltered"": """",
                    ""processing"": `<div style=""margin-top:4%""><i class=""fa fa-spinner fa-spin fa-3x fa-fw"" ></i><span class=""sr-only"">Loading...</span></div> `
                        },
                    ajax: {
 ");
                WriteLiteral(@"                       url: '/DisplayOrders/AdminArchivedOrders',
                        type: 'POST',
                        dataType: ""json"",
                        data: function (d) {
                            d.DataTableFilterDto = search_obj;

                            d.columnsDef = ['pharmacyName', 'createdAtString', 'drugId', 'drugName', 'quantity'
                                , 'pricePerUnit', 'totalPrice', 'Status']
                        }
                    },
                    columns: [
                        { data: 'pharmacyName', name: ""pharmacyName"",orderable:false },
                        { data: 'createdAtString', name: ""createdAt"",orderable:false },
                        { data: 'drugId', name: ""drugId"", orderable: false, className: ""text-center"" },
                        { data: 'drugName', name: ""drugName"", orderable: false },
                        { data: 'quantity', name: ""quantity"", orderable: false, className: ""text-center"" },
                 ");
                WriteLiteral(@"       { data: 'pricePerUnit', name: ""pricePerUnit"", orderable: false, className: ""text-center"" },
                        { data: 'totalPrice', name: ""totalPrice"", orderable: false, className: ""text-center"" },
                        { data: 'status', name: ""Status"", orderable: false, className: ""text-center"" },
                    ],


                    columnDefs: [

                        {
                            targets: 0, ""visible"": false,
                        },
                         {
                            targets: 1, ""visible"": false
                        },
                        {
                            targets: -1,
                            render: function (data, type, full, meta) {
                                var status = {
                                    1: { 'title': 'Pending', 'class': 'label-light-primary' },
                                    2: { 'title': 'Completed', 'class': 'label-light-danger' },
                              ");
                WriteLiteral(@"      3: { 'title': 'Canceled', 'class': 'label-light-primary' },

                                };
                                if (typeof status[data] === 'undefined') {
                                    return data;
                                }
                                    return '<span class=""label label-lg font-weight-bold' + status[data].class + ' label-inline"">' + status[data].title + '</span>';
                              }
                           },
                           {
                               targets:-2,
                               render:(data,type,full,meta) => data.toFixed(2)
                           },
                           {
                               targets:-3,
                               render:(data,type,full,meta) => data.toFixed(2)
                           },
                    ],
                });
                //    $('#inp').on('keyup', function() {
                //    table.search($(this).val(), 'Drug");
                WriteLiteral(@"Name');
                //    table.draw()
                //});


                //event on pharmacys select2
                $('body').on('change', '#Pharmacy-name', function (e) {
                    let selected_val = $(this).find(':selected').val();
                    console.log(selected_val)
                    Object.assign(search_obj, { ""PharmacyId"": selected_val })
                    console.log(""ass"")
                    console.log(search_obj)
                    table.draw();

                }); //end of event on pharmacys select2



                //event on price range
                $('#price-range').on('click', function () {
                    price_range_start = +$(""[name='price_range_start']"").val();
                    price_range_end = +$(""[name='price_range_end']"").val();

                    if (price_range_start >= price_range_end) {
                        $(""[name='price_range_start']"").addClass('border-danger');
                        $(""[name='price");
                WriteLiteral(@"_range_end']"").addClass('border-danger');
                        return false
                    }

                    $('#price-range-modal').modal('hide')

                    $(""[name='price_range_start']"").removeClass('border-danger');
                    $(""[name='price_range_end']"").removeClass('border-danger');

                    console.log(price_range_start);
                    console.log(price_range_end);

                    Object.assign(search_obj, { ""MinTotalPrice"": price_range_start })
                    Object.assign(search_obj, { ""MaxTotalPrice"": price_range_end })

                    console.log(search_obj)
                    table.draw();
                }); //end of price range event



                //event on drugs select2
                $('body').on('change', '#drug-name', function (e) {
                    let selected_val = $(this).find(':selected').val();
                    console.log(selected_val)
                    Object.assign(search_obj, ");
                WriteLiteral(@"{ ""DrugId"": +selected_val })
                    console.log(search_obj)
                    table.draw();
                }); //end of event on drugs select2


                //event on daterange
                $(function () {
                    $('button[name=""daterange""]').daterangepicker({
                            showDropdowns: true,
                            opens: 'left',
                            minYear: 2021,
                            autoApply: true,
                            ranges: {
                                'Today': [moment(), moment()],
                                'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                                'Last 7 Days': [moment().subtract(6, 'days'), moment()],
                                'Last 30 Days': [moment().subtract(29, 'days'), moment()],
                                'This Month': [moment().startOf('month'), moment().endOf('month')],
                                'Last M");
                WriteLiteral(@"onth': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
                            },
                        ""alwaysShowCalendars"": true,
                        ""linkedCalendars"": false,
                        ""startDate"": moment().subtract(10,'days'),
                        ""endDate"": moment()
                    }, function (start, end, label) {
                        console.log(start.format('MM/DD/YYYY'));
                        console.log(end.format('MM/DD/YYYY'));
                        Object.assign(search_obj, { ""From"": start.format('MM/DD/YYYY') })
                        Object.assign(search_obj, { ""To"": end.format('MM/DD/YYYY') })
                        console.log(search_obj)
                        table.draw();

                    });
                });//end of event on daterange



            };

            return {

                //main function to initiate the module
                init: function () {
    ");
                WriteLiteral(@"                initTable1();
                },

            };

        }();

        jQuery(document).ready(function () {
            KTDatatablesDataSourceAjaxServer.init();
        });


        //--event on edit Order
        //$(""body"").on(""click"","".edit-order"",function(e){
        //    $(""#edit-order-modal"").modal(""show"");
        //    let PharmacyorderId = $(this).data(""id"");

        //    $.ajax({
        //        url:`/DrugStoreApp/DisplayOrders/EditOrderByAdmin/${PharmacyorderId}`,
        //        type:""GET"",
        //        success:function(data){
        //            $(""#edit-order-modal tbody"").html(``)
        //                $.each(data,function(index,value){
        //                    console.log(value)
        //                    $(""#edit-order-modal tbody"").append(`
        //                    <tr class=""edit-order-row"">
        //                        <th data-drug-id=""${value.drugIdParam}"" data-order-id=""${value.orderId}"" scope=""row"">${value.");
                WriteLiteral(@"drugId}</th>
        //                        <td>${value.drugName}</td>
        //                        <td><input type=""number"" min=""1"" class=""form-control w-25 quantity"" value=""${value.quantity}"" /></td>
        //                        <td class=""pricePerUnit"">${value.pricePerUnit}</td>
        //                        <td class=""total-price"">${value.totalPrice}</td>
        //                    </tr>
        //                    `)
        //                })

        //        }

        //    })

        //})


        //--event when approve pharmacy order
        //$(""body"").on(""click"","".approve-order"",function(e){
        //     let url = ''
        //        let id = $(this).data('id');
        //        let parent = $(this).closest('tr');
        //        swal.fire({
        //            title: 'هل أنت متأكد؟',
        //            text: ""!"",
        //            type: 'warning',
        //            showCancelButton: true,
        //            cancelButtonTe");
                WriteLiteral(@"xt: 'Cancel',
        //            confirmButtonText: 'OK',
        //            preConfirm: function () {
        //                $.ajax({
        //                    url: url.replace(':id', id),
        //                    type: 'delete',
        //                    data: {
        //                    },
        //                    success: function (response) {
        //                        swal.fire({
        //                            title: 'Completed',
        //                            text: 'The Order was Completed',
        //                            type: 'success',
        //                            showConfirmButton: false,
        //                            timer: 1500,
        //                        })
        //                        parent.hide(500)
        //                    }
        //                });
        //            }
        //        });


        //})



        //event when change quantity in modal
        $(");
                WriteLiteral(@"'body').on(""change"", "".quantity"", function (e) {
            quantity = $(this).val();
            pricePerUnit = +$(this).closest(""tr"").find("".pricePerUnit"").text();

            $(this).closest(""tr"").find("".total-price"").text(quantity * pricePerUnit);


        });

        //event on submit modal button

        $('body').on('click', ""#submit-modal"", function () {
            let data = [];
            $(""tr.edit-order-row"").each(function (i) {
                data[i] = {
                    ""id"": +$(this).find('th').data('order-id'),
                    ""drugId"": +$(this).find('th').data('drug-id'),
                    ""quantity"": +$(this).find('.quantity').val()
                }
            })
            console.log(data)
            // $.post(""/DrugStoreApp/DisplayOrders/UpdateOrderByAdmin"",{orderDtos:data},function(data){alert(10) })

            $.ajax({
                url: ""/DisplayOrders/UpdateOrderByAdmin"",
                type: ""POST"",
                data: { orderDtos");
                WriteLiteral(@": data },
                dataType: ""json"",
                success: function (data) {
                    console.log(""dsddd"")
                    $(""#edit-order-modal"").modal(""hide"");
                    Swal.fire({
                        icon: 'success',
                        title: ""This Request is sent"",
                        text: data.message
                    });
                    $('#example').DataTable().ajax.reload();
                },
                error: (e) => {
                    console.log(e);
                }
            });

        })

        //event on export button
        $(""body"").on(""click"", ""#export"", function (e) {
            $(""#showLaoder"").click();
            // console.log(process_pharmacyOrdersIds);
            var url = ""Files/"" + new Date(Date.now()).toISOString();

            $.ajax({
                url: ""/DisplayOrders/ExportArchivedOrders"",
                type: ""POST"",
                //dataType:""json"",
                data:");
                WriteLiteral(@" { query: search_obj },
                xhr: function () {
                    var xhr = new XMLHttpRequest();
                    xhr.onreadystatechange = function () {
                        if (xhr.readyState == 2) {
                            if (xhr.status == 200) {
                                xhr.responseType = ""blob"";
                            } else {
                                xhr.responseType = ""text"";
                            }
                        }
                    };
                    return xhr;
                },
                success: function (data) {


                    if (data.size <= 14) {

                        Swal.fire({
                            icon: 'error',
                            title: 'Erorr',
                            text: 'No Data Found',
                        })
                        $(""#closeLaoder"").click();
                        return false
                    } //end of if

                    //Co");
                WriteLiteral(@"nvert the Byte Data to BLOB object.
                    var blob = new Blob([data], { type: ""application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"" });

                    //Check the Browser type and download the File.
                    var isIE = false || !!document.documentMode;
                    if (isIE) {
                        window.navigator.msSaveBlob(blob, new Date(Date.now()).toISOString() + "".xlsx"");
                        $(""#closeLaoder"").click();
                    } else {
                        var url = window.URL || window.webkitURL;
                        link = url.createObjectURL(blob);
                        var a = $(""<a />"");
                        a.attr(""download"", new Date(Date.now()).toISOString() + "".xlsx"");
                        a.attr(""href"", link);
                        $(""body"").append(a);
                        a[0].click();
                        $(""body"").remove(a);
                        $(""#closeLaoder"").click();
        ");
                WriteLiteral("            }\r\n\r\n\r\n                },\r\n                error: function (e) {\r\n                    $(\"#closeLaoder\").click();\r\n                }\r\n            })\r\n        });\r\n           //end of export button event\r\n\r\n\r\n    </script>\r\n");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public IOptions<RequestLocalizationOptions> locOptions { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public IViewLocalizer localizer { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
