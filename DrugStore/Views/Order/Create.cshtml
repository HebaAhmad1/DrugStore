@using DrugStoreCore.ViewModel
@model ResponseViewModel<List<OrderViewModel>>

@section Styles{
    <link rel="stylesheet" href="https://pro.fontawesome.com/releases/v5.10.0/css/all.css" integrity="sha384-AYmEC3Yw5cVb3ZcuHtOA93w35dYTsvhLPVnYs9eStHfGJvOvKxVfELGroGkvsg+p" crossorigin="anonymous" />
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
    <style>
        .action-options > div {
            display: none;
        }

        .action-options:hover div {
            display: block;
        }
    </style>
}


<nav aria-label="breadcrumb bg-transparent ">
    <ol class="breadcrumb bg-transparent">
        <li class="breadcrumb-item" aria-current="page">
            <i class="fas fa-home"></i>
            <span style="color:#0093dd;font-weight:500">/@localizer["New Order"]</span>
        </li>
    </ol>
</nav>


<div class="shadow-sm p-3 mb-5 bg-white rounded mt-3 mx-auto row">
    <div class="col-lg-5 col-md-12  col-sm-12">
        <img src="~/icons/pharmacy2.png" height="30px" /> <span class="font-weight-bold" style="font-weight:700"> @localizer["Pharmcy Name"] : </span> @ViewBag.PahrmacyName

    </div>
    <div class="col-lg-5 col-md-8 col-sm-12" id="location">
        <img src="~/icons/location2.png" height="30px" /> <span class="font-weight-bold" style="font-weight:700"> @localizer["Location"] : </span> @ViewBag.Address

    </div>

    <div class="col-lg-2 col-md-4 col-sm-12" id="myOrders">
        <a href="/Order/PharmacyCurrentOrders">@localizer["My Orders"] <i class="fas fa-chevron-right"></i></a>

    </div>
</div>



<h5 class="headerArabic">@localizer["Create Order"]</h5>
<div class="background-selver">
    <div class="row rowArabic">
        <div class="col-md-4 col-sm-12 Icon-inside">
            <label>@localizer["Drug Name"]</label>
            <select type="text" class="form-control data-drug-select" placeholder="Select or enter drug type " id="drug-name">
            </select>
            <i class="fas fa-box iconDrugName" aria-hidden="true"></i>
        </div>
        <div class="col-md-2 col-sm-12 mx-md-n2">
            <label>@localizer["Quantity"]</label>
            <input type="number" min="1" class="form-control my-auto" placeholder="" id="drug-quantity">
        </div>

        <div class="col-md-2 col-sm-12">
            <label></label>
            <button type="button" class="btn blue-button btn-sm d-block" id="add-drug">  + @localizer["Add"]</button>
        </div>
        <div class="col-sm-12">
            <form id="order-form" data-action="/Order/Create">
                <div class="add-remove-tbl table-responsive">
                    <table class="table mt-3 table-light create-order-tabel">
                        <thead class="text-center">
                            <tr>
                                <th scope="col">Drug ID</th>
                                <th scope="col">Drug Name</th>
                                <th scope="col">Quantity</th>
                                <th scope="col">Drug Status</th>
                                <th scope="col">Price Per Unit(NIS)</th>
                                <th scope="col">Total Price(NIS)</th>
                                <th scope="col">Operation</th>
                            </tr>
                        </thead>
                        <tbody class="text-center">
                            @if (@Model?.Status is true)
                            {
                                foreach (var item in @Model.Data)
                                {
                                    <tr class="order-row">

                                        <th scope="row" class="drug_id" style="width:100px"><span class="drug-code">@item.Drug.DrugId</span><input type="hidden" data-id="${i}" name="drug_id[${i}]" value="@item.Drug.Id" class="form-control drug-id" style="background:none;border:none" disabled /></th>
                                        <td style="width:270px"><select class="form-control w-100 drug-name data-drug-select" data-index="${i}" name="drug_name[${i}]" disabled><option selected>@item.Drug.DrugName</option></select></td>
                                        <td style="width:90px"><input type="number" min="1" class="form-control form-control-sm mt-1 w-100 drug-quantity" data-index="${i}" name="drug_quantity[${i}]" data-old-quantity="@item.Quantity" value="@item.Quantity" readonly /></td>




                                        <td class="text-left d-block mt-2">

                                            <img class="status-img" height="20" src="/icons/available_check.png" alt="" /> <span class="status">Available</span>

                                        </td>
                                        <td class="unit-price" data-unit-price="@((item.Drug.SellPrice).ToString("0.00"))" style="line-height: 33px ">@((item.Drug.SellPrice).ToString("0.00"))</td>
                                        <td class="total-price" style="line-height:33px">@((item.Drug.SellPrice * item.Quantity).ToString("0.00"))</td>

                                        <td class="action-options">
                                            <div class="edit-remove">
                                                <i class="fas fa-edit text-primary edit-tr"></i>
                                                @*Update Operation To Current Order*@
                                                @if (ViewBag.update is null)
                                                {
                                                    <i class="fas fa-trash-alt text-danger remove-tr"></i>
                                                }
                                            </div>
                                            <button type="button" style="display: none" class="btn btn-success update-row">update</button>
                                        </td>

                                        <input type="hidden" class="order-id" value="@item.Id" />
                                        <input type="hidden" class="is-hanging" value="@item.IsHanging" />
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                    <div style="text-align:right">@localizer["Total Price"] : <span class="order-price">0</span></div>
                </div>
            </form>
        </div>

    </div>
</div>

<div class="form-group row mt-3 Parent-send-order">
    <div class="">
        <button type="button" id="send-order" class="btn green-button">@localizer["Save"]</button>
    </div>
</div>












@section Scripts{
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>




    <script>

        $("#order-form").on("submit" , function(e){   //to prevent submit form when press Enter Key
                e.preventDefault();
            });

        //$(".create-another").on("click",function(e){
        //    e.preventDefault();
        //    $("#new-row").click();
        //});





        //event on add-drug button
        $("#add-drug").on("click",function(e){
            e.preventDefault();
            let drug_id = $("#drug-name").val();
            let drug_name = $("#drug-name").text();
            let drug_quantity = $("#drug-quantity").val();
            let is_found = false;

            if ($("#drug-quantity").val() < 1 || drug_quantity % 1 != 0) {
                Swal.fire({
                            icon: 'error',
                            text: "@localizer["Enter Integer Number And Greater Than 0"]"
                        });
                        return false;
            }




            $('th input').each(function(){      //to check if exist
               if ($(this).val() == drug_id){
                   is_found = true;
                     Swal.fire({
                        icon: 'error',
                        title: '@localizer["This drug is already added to your order"]'
                        //text: 'This drug is already added to your order',
                    });
                   return false;  //to break $.each
               };
            });



            //I decleare it to use it in append

             function getDrugCallback(response){
                 result = response.data.data;
                //debugger
                  i = $(".order-row").length  //to calcuate number of order-row classes(not used)

                 if (drug_name && drug_quantity && drug_id && !is_found) {
                     $("table tbody").prepend(`<tr class="order-row">
                            <th scope="row" class="drug_id" style="width:100px"><span class="drug-code">${result.drugId}</span><input type="hidden" data-id="${i}" name="drug_id[${i}]" value="${drug_id}" class="form-control drug-id" style="background:none;border:none" disabled/></th>
                            <td style="width:26%"><select class="form-control w-100 drug-name data-drug-select" data-index="${i}" name="drug_name[${i}]"  disabled/><option selected>${result.drugName}</option></select></td>
                            <td style="width:11%"><input type="number" min="1" class="form-control form-control-sm mt-1 w-100 drug-quantity" data-index="${i}" name="drug_quantity[${i}]" value="${drug_quantity}" readonly/></td>

                            <td class="text-left d-block mt-2">
                                <img class="status-img" height="20px" src="" alt="" /> <span class="status"></span>
                            </td>
                            <td class="unit-price" style="width:7%;line-height:33px">${Number(result.sellPrice).toFixed(2)}</td>
                            <td class="total-price" style="line-height:33px">${Number(result.sellPrice * drug_quantity).toFixed(2)}</td>

                            <td class="action-options">
                                 <div class="edit-remove">
                                     <i class="fas fa-edit  edit-tr text-primary"></i>
                                     <i class="fas fa-trash-alt remove-tr text-danger"></i>
                                </div>
                                <button type="button" style="display: none" class="btn btn-success update-row">update</button>
                            </td>

                           <input type="hidden" class="order-id" value="0" />
                        </tr>`);

                          //If Quantity Is 0 Not Display Price To Pharmacy
                     if (result.stock == 0 ) {
                         $('.unit-price').first().text("");
                         $('.total-price').first().text("")
                     }



                     if (drug_quantity <= result.stock) {
                         $(".status-img").first().attr("src", "/icons/available_check.png")
                         $(".status").first().text("Available")
                     } else {
                         $(".status-img").first().attr("src", "/icons/unavailable.png")
                         $(".status").first().text("Unavailable")
                        }

                        }; //end of external if



                    calculate_total_order_price();   //calculate order price when reorder and call it when add new item









              //internal select2
             $('.drug-name').select2({

               placeholder:'@localizer["Enter Drug Name"]',
              ajax: {
                url: "/Drug/AllDrugs",
                dataType:"json",
                type:"GET",
                data:function(params){
                    return {
                        search: params.term,
                        page: params.page
                    };
                },
                processResult:function(data){
                    return{
                        result:data
                    };
                },
                cache:true
              }

            }); //end of internal select2




            }; //end of getDrugCallback function



            $.ajax({
                url:`/drug/Details/${drug_id}`,
                type:"GET",
                dataType:"json",
                success:getDrugCallback
            })//end of ajax







        });   //end of event on add-drug button





        //event on select2 inside table
        $('body').on('change','.drug-name',function(e){
           let selected_val = $(this).find(':selected').val();
           let img_check = $(this).closest('tr').find('td img');
           let quantity = $(this).closest("tr").find(".drug-quantity").val();
           let status_check = $(this).closest('tr').find('td .status');
           let oldOptionText = $(this).closest('tr');

            let that = $(this)
          var isDuplicatedValue = false;
               $("body").find(".drug_id input").each(function(e){     //to avoid repeat element in table

                                if(selected_val == $(this).val()){
                                    Swal.fire({
                                          icon: 'error',
                                          //title: 'This is found',
                                          text: '@localizer["This drug is already added to your order"]',

                                        });
                                    isDuplicatedValue = true;
                                   return false;

                                }; //end of if

                })//end of each


                if(isDuplicatedValue){
                    return false;
                }


           $.ajax({
                url:`/drug/Details/${selected_val}`,
                type:"GET",
                dataType:"json",
                success:function({data}){

                   that.parent().prev('th').find('input').val(data.data.id);

                    that.closest('tr').find('.unit-price').text(data.data.sellPrice.toFixed(2));
                    that.closest('tr').find('.drug-quantity').val(1);
                    that.closest('tr').find('.total-price').text(data.data.sellPrice.toFixed(2))
                    that.closest('tr').find('.drug-code').text(data.data.drugId)
                    that.closest('tr').find('.data-drug-select').html(`<option selected>${data.data.drugName}</option>`)


                    if(data.data.stock >= quantity){
                        img_check.attr("src","/icons/available_check.png");
                        status_check.text("Available");
                    }else{
                         img_check.attr("src","/icons/unavailable.png");
                        status_check.text("Unavailable");
                    }



                 calculate_total_order_price();   //calculate order price when reorder and call it when add new item

                }
            })//end of ajax




        })//end of event on select2 inside table




        //event on internal quantity input
        $('body').on('change','.drug-quantity',function(e){
            let old_quantity = +$(this).data("old-quantity");
            let quantity = $(this).val();
            let drug_id = $(this).closest('tr').find('th input').val();
            let img_check = $(this).closest('tr').find('td img');
            let status_check = $(this).closest('tr').find('td .status');
            let unit_price = $(this).closest('tr').find('.unit-price');
            let unit_price_val = +$(this).closest("tr").find(".unit-price").data("unit-price");
            let total_price = $(this).closest('tr').find('.total-price');

            if (quantity < 1 || quantity%1 != 0) {
                        Swal.fire({
                            icon: 'error',
                            title: '',
                            text: '@localizer["Enter Integer Number And Greater Than 0"]',
                        });

                return false;
            }



            $.ajax({

                url:`/drug/Details/${drug_id}`,
                type:"GET",
                dataType:"json",
                success:function({data}){
                     //debugger;

                     if(data.data.stock < 1){
                         unit_price.text("");
                        total_price.text("");
                        img_check.attr("src","/icons/unavailable.png");
                        status_check.text("Unavailable");
                     }
                     else if(data.data.stock >= quantity)
                     {
                         img_check.attr("src","/icons/available_check.png");
                        status_check.text("Available");
                        unit_price.text((data.data.sellPrice).toFixed(2));
                        total_price.text((data.data.sellPrice * quantity).toFixed(2))
                     }else{
                         img_check.attr("src","/icons/unavailable.png");
                        status_check.text("Unavailable");
                         unit_price.text((data.data.sellPrice).toFixed(2));
                        total_price.text((data.data.sellPrice * quantity).toFixed(2))
                     }



                    if(!isNaN(old_quantity) && '@(ViewBag.update)' == "update" && quantity <= old_quantity + data.data.stock )  //special case when update order
                    {
                        img_check.attr("src","/icons/available_check.png");
                        status_check.text("Available");
                        unit_price.text(unit_price_val);
                        total_price.text((unit_price_val * quantity).toFixed(2))
                    }else if(!isNaN(old_quantity) && '@(ViewBag.update)' == "update" ){
                        unit_price.text(unit_price_val);
                        total_price.text((unit_price_val * quantity).toFixed(2))
                    }


               calculate_total_order_price();   //calculate order price when reorder and call it when

                }//end of success


            })//end of ajax






        }) //end of event on internal quantity input



        $("body").on("click", ".remove-tr", function(e){
            e.preventDefault();
              that = $(this)
               Swal.fire({
                  title: '@localizer["Are You sure?"]',
                  //text: "You won't be able to revert this!",
                  icon: 'warning',
                  showCancelButton: true,
                  confirmButtonColor: '#3085d6',
                  cancelButtonColor: '#d33',
                  confirmButtonText: '@localizer["Yes"]',
                   cancelButtonText: '@localizer["Cancel"]',
                }).then((result) => {
               if(result.isConfirmed){
                     that.closest("tr").nextAll("tr").each(function(){
                    let i = that.find("select.drug-name").attr("data-index");

                    })
                     that.closest("tr").remove();

                    //calculate order price
                    calculate_total_order_price();   //calculate order price when reorder and call it when add new item

               }//end of if(result.isConfirmed)

            })//end of then


        });



         $("body").on("click", ".edit-tr", function(e){
            e.preventDefault();


             if ($(this).closest("tr").find(".drug-quantity").val() < 1
                || ($(this).closest("tr").find(".drug-quantity").val()) % 1 != 0)  //to check other elements
                {
               Swal.fire({
                            icon: 'error',
                            title: '',
                            text: '@localizer["Enter Integer Number And Greater Than 0"]',
                        });
                        return false;
                }

             $(this).closest("tr").find("td").find("select").prop("disabled",false)
            $(this).closest("tr").find("td").find("input").attr("readonly",false)


            let drug_name = $(this).closest("tr").find(".drug-name").val();
            let quantity = $(this).closest("tr").find(".drug-quantity").val();


           $(this).closest("td").find(".edit-remove").hide();
           $(this).closest("td").find(".update-row").show();
           $(this).closest("tr").siblings().find(".update-row").hide();
           $(this).closest("tr").siblings().find(".edit-remove").show();
           $(this).closest("tr").siblings().find("input").prop("readonly",true);
           $(this).closest("tr").siblings().find("select").prop("disabled",true);


           $(this).closest("tr").find("td").find("select").prop("disabled",false)

        });



        $("body").on('click',".update-row",function(e){
            e.preventDefault();


            if ($(this).closest("tr").find(".drug-quantity").val() < 1
                || ($(this).closest("tr").find(".drug-quantity").val()) % 1 != 0) {
               Swal.fire({
                            icon: 'error',
                            title: '',
                            text: '@localizer["Enter Integer Number And Greater Than 0"]'
                        });
                        return false;
            }

           $(this).closest("tr").find("td").find("input").attr("readonly",true);
           $("table select").prop("disabled",true);

            //$(this).closest("td").html(`<i class="fas fa-edit  edit-tr"></i>
            //                           <i class="fas fa-trash-alt remove-tr"></i>`)

            $(this).closest("td").find(".update-row").hide();
            $(this).closest("td").find(".edit-remove").show();


        });





    $(document).ready(function(){

         $('.data-drug-select').select2({
           placeholder:'@localizer["Enter Drug Name"]',
          ajax: {
            url: "/drug/AllDrugs",
            dataType:"json",
            type:"GET",
            data:function(params){
                return {
                    search: params.term,
                    page: params.page
                };
            },
            processResult:function(data){
                return{
                    result:data
                };
            },
            cache:true
          }
        });



            $("#send-order").click(function(e){    //send request when send form
                    e.preventDefault();

                let allIsFounds = true;
                let is_hanging = false;

    
                $("tr.order-row").each(function(e){
                    //debugger
                    if($(this).find(".status").text() == "Unavailable"){
                             Swal.fire({
                            icon: 'error',
                            title: '',
                            text: '@localizer["Your order will be added successfully but you have some added drugs that not exist, please edit your order"]',
                        });

                        allIsFounds = false;
                        return false;
                    } //end of if

                 

                    if (+$(this).find(".drug-quantity").val() < 1 || (+$(this).find(".drug-quantity").val()) % 1 != 0 ){
                        Swal.fire({
                            icon: 'error',
                            title: '',
                            text: '@localizer["Enter Integer Number And Greater Than 0"]',
                        });
                        allIsFounds = false;
                        return false;
                    } //end of if

                })//end of each

                //$(".drug-quantity").each(function(e){

                //}) //end of each


                   $(".is-hanging").each(function(){
                        if($(this).val()== "value"){
                                 Swal.fire({
                                icon: 'error',
                                title: '',
                                text: '@localizer["This Order is Hanging"]',

                            }).then(function(){
                                window.location.href = "/Order/PharmacyCurrentOrders";
                            });
                            is_hanging = true;
                           return false
                        }
                         
                    })  //check if hanging when update 

                 if(is_hanging == true){
                      return false; 
                 }

                if(allIsFounds == false)
                {
                    return false;
                }

                let form = $("#order-form")
                let data2 = []

                $(".order-row").each(function(i){
                    data2[i]  = {"drugId": +$(this).find('.drug-id').val(),
                                 "quantity":+ $(this).find('.drug-quantity').val(),
                                  "id":+ $(this).find('.order-id').val()}


                })

               if($.isEmptyObject(data2)){
                     Swal.fire({
                            icon: 'error',
                            title: '@localizer["Please add Order"]',
                            //text: '',
                        });
                        return false;
                }

                let url ="";
                if ('@(ViewBag.update)' == "update") {
                    url = "/order/UpdateOrder"

                }else{
                    url = "/order/create";
                }


                $.ajax({
                    type:"POST",
                    url:url,
                    data: {OrderDto: data2},
                    dataType:"json",
                    success:function(e){
                        Swal.fire({
                            icon: 'success',
                            title: 'Success',
                            text: '@localizer["This Request is sent"]',
                            timer:3000
                        }).then(function(){
                               window.location.href = "/Order/PharmacyCurrentOrders";
                        });
                        
                     $("table tbody").html(``);  //to remove table content
                     $(".order-price").text(0);  //to reset order price

                   
                    },
                    error: (e) => {
                    }

                });


            });

        calculate_total_order_price();
    });

    function calculate_total_order_price() {   //calculate order price when reorder and call it when add new item


            let order_total_price = 0;
            $('.total-price').each(function () {
                order_total_price += Number($(this).text());

            })
            order_total_price = Number(order_total_price).toFixed(2);
            // here, you have your sum
            $(".order-price").text(order_total_price);
        };

         calculate_total_order_price();  // to call it when reoder

    </script>
}

